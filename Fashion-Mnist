import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np

mnist = tf.keras.datasets.fashion_mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

model = tf.keras.models.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(10, activation='softmax')
    ])

def train():
    model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
    model.fit(x_train, y_train, epochs=3)

def test():
    model.evaluate(x_test, y_test)

def pred():
    predictions = model.predict(x_test)
    print(np.argmax(predictions[5346]))
    plt.imshow(x_test[5346],cmap=plt.cm.binary)
    plt.show()
    print(y_test[5346])


def main():
    train()
    test()
    pred()

if __name__ == "__main__":
    main()
